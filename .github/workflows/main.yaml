name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, reopened, review_requested, ready_for_review]
  push:
    branches: [master]

jobs:
  semantic_pull_request:
    name: ✅ Semantic Pull Request
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  changes:
    runs-on: ubuntu-latest

    outputs:
      needs_dart_build: ${{ steps.needs_dart_build.outputs.changes }}

    name: 👀 Detect Changes

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        name: Build Detection
        id: needs_dart_build
        with:
          filters: |
            bloc_concurrency:
              - ./.github/codecov.yml
              - ./.github/workflows/main.yaml
              - ./.github/actions/dart_package/action.yaml
              - packages/bloc_concurrency/**
            bloc_test:
              - ./.github/codecov.yml
              - ./.github/workflows/main.yaml
              - ./.github/actions/dart_package/action.yaml
              - packages/bloc_test/**
            bloc_tools:
              - ./.github/codecov.yml
              - ./.github/workflows/main.yaml
              - ./.github/actions/dart_package/action.yaml
              - packages/bloc_tools/**
            bloc:
              - ./.github/codecov.yml
              - ./.github/workflows/main.yaml
              - ./.github/actions/dart_package/action.yaml
              - packages/bloc/**

  build_dart_packages:
    needs: changes
    if: ${{ needs.changes.outputs.needs_dart_build != '[]' }}

    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.needs_dart_build) }}

    runs-on: ubuntu-latest

    name: 🎯 Build ${{ matrix.package }}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🎯 Build ${{ matrix.package }}
        uses: ./.github/actions/dart_package
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          working_directory: packages/${{ matrix.package }}
          min_coverage: 100

  ci:
    needs: [semantic_pull_request, build_dart_packages]
    if: ${{ always() }}

    runs-on: ubuntu-latest

    steps:
      - name: ⛔️ exit(1) on failure
        if: ${{ contains(join(needs.*.result, ','), 'failure') }}
        run: exit 1
