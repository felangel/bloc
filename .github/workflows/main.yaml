name: build

on: [push, pull_request]

env:
  flutter_channel: 'stable'
  flutter_version: '1.12.13+hotfix.7'
  flutter_build_folders: ['examples/flutter_bloc_with_stream', 'examples/flutter_complex_list', 'examples/flutter_dynamic_form', 'examples/flutter_form_validation', 'examples/flutter_infinite_list', 'examples/flutter_login', 'examples/flutter_shopping_cart', 'examples/flutter_timer', 'examples/flutter_weather', 'examples/github_search/flutter_github_search', 'packages/flutter_bloc/example']

jobs:
  # Set up Flutter for all other tasks.
  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.OS }}-flutter-cache-${{ env.flutter_version }}
          restore-keys: |
            ${{ runner.OS }}-flutter-cache-

      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

  # Analyze and test each package.
  analyze-and-test:
    runs-on: ${{ matrix.os }}
    needs: setup

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        folder: ['examples/flutter_bloc_with_stream', 'examples/flutter_complex_list', 'examples/flutter_dynamic_form', 'examples/flutter_form_validation', 'examples/flutter_infinite_list', 'examples/flutter_login', 'examples/flutter_shopping_cart', 'examples/flutter_timer', 'examples/flutter_todos', 'examples/flutter_weather', 'examples/github_search/flutter_github_search', 'packages/angular_bloc', 'packages/bloc', 'packages/bloc_test', 'packages/flutter_bloc', 'packages/flutter_bloc/example']
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.OS }}-flutter-cache-${{ env.flutter_version }}
          restore-keys: |
            ${{ runner.OS }}-flutter-cache-

      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Analyze and test
        env:
          FLUTTER_DART_HOME: ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin
        run: |
          export PATH=$PATH:$FLUTTER_DART_HOME
          ./scripts/ci.sh ${{ matrix.folder }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ matrix.package }}.lcov

  # Build an APK for each flutter example.
  build-apk:
    runs-on: ${{ matrix.os }}
    needs: setup

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target_folder: {{ env.flutter_build_folders }}
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.OS }}-flutter-cache-${{ env.flutter_version }}
          restore-keys: |
            ${{ runner.OS }}-flutter-cache-

      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Build an APK
        env:
          FLUTTER_DART_HOME: ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin
        run: |
          export PATH=$PATH:$FLUTTER_DART_HOME
          ./scripts/ci_build_apk.sh ${{ matrix.target_folder }}

